# Generated by Django 5.1.7 on 2025-04-20 11:37

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('infrastructure', '0005_alter_issuereport_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('A', 'Block A (Academic)'), ('B', 'Block B (Academic)'), ('C', 'Block C (Administration)'), ('D', 'Block D (Library)'), ('E', 'Block E (Utilities)')], max_length=1, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('has_multiple_floors', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Campus Block',
                'verbose_name_plural': 'Campus Blocks',
                'ordering': ['code'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('maintenance_interval', models.PositiveIntegerField(blank=True, help_text='Recommended maintenance interval in days', null=True)),
            ],
            options={
                'verbose_name_plural': 'Equipment Categories',
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_number', models.CharField(blank=True, max_length=50)),
                ('serial_number', models.CharField(blank=True, max_length=100, unique=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('OK', 'Operational'), ('MAINT', 'Under Maintenance'), ('OUT', 'Out of Service'), ('REPLACE', 'Needs Replacement')], default='OK', max_length=10)),
                ('last_maintenance', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='equipment', to='infrastructure.equipmentcategory')),
            ],
            options={
                'verbose_name_plural': 'Equipment',
                'ordering': ['room', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)])),
                ('name', models.CharField(blank=True, max_length=100)),
                ('block', models.ForeignKey(limit_choices_to={'code__in': ['A', 'B']}, on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='infrastructure.block')),
            ],
            options={
                'ordering': ['block', 'number'],
                'unique_together': {('block', 'number')},
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.CharField(choices=[('ELECTRICAL', 'Electrical'), ('PLUMBING', 'Plumbing'), ('HVAC', 'HVAC'), ('STRUCTURAL', 'Structural'), ('EQUIPMENT', 'Equipment Failure'), ('OTHER', 'Other')], default='EQUIPMENT', max_length=15)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low (Non-urgent)'), ('MED', 'Medium (Normal)'), ('HIGH', 'High (Urgent)'), ('CRIT', 'Critical (Campus Impact)')], default='MED', max_length=5)),
                ('status', models.CharField(choices=[('REPORTED', 'Reported'), ('REVIEWED', 'Reviewed'), ('ASSIGNED', 'Assigned'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='REPORTED', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_requests', to=settings.AUTH_USER_MODEL)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.block')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_requests', to='infrastructure.equipment')),
                ('floor', models.ForeignKey(blank=True, limit_choices_to={'block__code__in': ['A', 'B']}, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.floor')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Maintenance Request',
                'verbose_name_plural': 'Maintenance Requests',
                'ordering': ['-priority', 'block', 'room'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_taken', models.TextField()),
                ('parts_used', models.TextField(blank=True)),
                ('labor_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('completion_date', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('technician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_logs', to=settings.AUTH_USER_MODEL)),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='infrastructure.maintenancerequest')),
            ],
            options={
                'verbose_name': 'Maintenance Log Entry',
                'verbose_name_plural': 'Maintenance Logs',
                'ordering': ['-completion_date'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=100)),
                ('room_type', models.CharField(choices=[('CLASS', 'Classroom'), ('LAB', 'Laboratory'), ('OFFICE', 'Office'), ('STORAGE', 'Storage'), ('UTILITY', 'Utility'), ('OTHER', 'Other')], default='CLASS', max_length=10)),
                ('is_generator_room', models.BooleanField(default=False)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='infrastructure.block')),
                ('floor', models.ForeignKey(blank=True, limit_choices_to={'block__code__in': ['A', 'B']}, null=True, on_delete=django.db.models.deletion.CASCADE, to='infrastructure.floor')),
            ],
            options={
                'ordering': ['block', 'number'],
                'unique_together': {('block', 'number')},
            },
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='infrastructure.room'),
        ),
        migrations.CreateModel(
            name='Generator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('capacity_kva', models.PositiveIntegerField()),
                ('fuel_type', models.CharField(choices=[('DIESEL', 'Diesel'), ('GAS', 'Natural Gas'), ('BIO', 'Biodiesel')], default='DIESEL', max_length=10)),
                ('installation_date', models.DateField()),
                ('last_service', models.DateField()),
                ('next_service', models.DateField()),
                ('service_provider', models.CharField(blank=True, max_length=100)),
                ('service_contact', models.CharField(blank=True, max_length=20)),
                ('room', models.OneToOneField(limit_choices_to={'is_generator_room': True}, on_delete=django.db.models.deletion.CASCADE, related_name='generator', to='infrastructure.room')),
            ],
            options={
                'verbose_name_plural': 'Generator Details',
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='infrastructure.room'),
        ),
        migrations.DeleteModel(
            name='IssueReport',
        ),
    ]
